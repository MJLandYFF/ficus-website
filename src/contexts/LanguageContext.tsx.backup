import React, { createContext, useContext, useState, ReactNode } from 'react';

export type Language = 'zh' | 'en';

interface LanguageContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string) => string;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

// 语言配置
const translations = {  zh: {
    // 导航菜单
    'nav.home': '首页',
    'nav.about': '关于我们',
    'nav.equipment': '设备',
    'nav.applications': '应用',
    'nav.technologies': '技术',
    'nav.services': '服务',
    'nav.contact': '联系我们',
    
    // 语言切换
    'lang.chinese': '中文',
    'lang.english': 'English',
    
    // 页面标题
    'page.home': '首页',
    'page.about': '关于我们',
    'page.equipment': '设备展示',
    'page.applications': '应用领域',
    'page.technologies': '技术优势',
    'page.services': '服务支持',
    'page.contact': '联系我们',
    'page.privacy': '隐私政策',
    
    // Footer
    'footer.description': '专业的气体分析解决方案提供商，致力于为工业和实验室应用提供高精度设备。',
    'footer.quickLinks': '快速链接',
    'footer.moreInfo': '更多信息',
    'footer.contact': '联系信息',
    'footer.copyright': '© 2024 FICUS. 保留所有权利。',
  } as const,  en: {
    // 导航菜单
    'nav.home': 'Home',
    'nav.about': 'About Us',
    'nav.equipment': 'Equipment',
    'nav.applications': 'Applications',
    'nav.technologies': 'Technologies',
    'nav.services': 'Services',
    'nav.contact': 'Contact Us',
    
    // 语言切换
    'lang.chinese': '中文',
    'lang.english': 'English',
    
    // 页面标题
    'page.home': 'Home',
    'page.about': 'About Us',
    'page.equipment': 'Equipment',
    'page.applications': 'Applications',
    'page.technologies': 'Technologies',
    'page.services': 'Services',
    'page.contact': 'Contact Us',
    'page.privacy': 'Privacy Policy',
    
    // Footer
    'footer.description': 'Professional gas analysis solution provider, committed to providing high-precision equipment for industrial and laboratory applications.',
    'footer.quickLinks': 'Quick Links',
    'footer.moreInfo': 'More Info',
    'footer.contact': 'Contact Info',
    'footer.copyright': '© 2024 FICUS. All rights reserved.',
  } as const
} as const;

interface LanguageProviderProps {
  children: ReactNode;
}

export const LanguageProvider: React.FC<LanguageProviderProps> = ({ children }) => {
  const [language, setLanguage] = useState<Language>('zh');
  const t = (key: string): string => {
    const currentTranslations = translations[language];
    return (currentTranslations as any)[key] || key;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = (): LanguageContextType => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};
